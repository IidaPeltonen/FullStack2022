{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iida\\\\React\\\\FullStack\\\\FullStack2022\\\\Osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Filter.js\",\n    _s = $RefreshSig$();\n\n/* Iida Peltonen 2022 */\nimport React, { useState } from 'react';\nimport Person from './Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  _s();\n\n  let {\n    persons,\n    filtPersons\n  } = _ref;\n  const [haetut, setHaetut] = useState([persons]);\n\n  function handleFilter(e) {\n    const hakusana = e.target.value;\n\n    if (hakusana != \"\") {\n      //käydään taulukon nimet läpi ja verrataan\n      persons.forEach(item => {\n        let nimi = item.name.toLowerCase(); //jos jo tallennettu nimi sisältään hakusanan\n\n        if (nimi.includes(hakusana.toLowerCase())) {\n          //nämä kaikki pitäisi sisällyttää tauluun, joka näytetään\n          haetut.push(item);\n        }\n\n        console.log(haetut);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Hae kaveria \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n            person: person\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    }\n  } //tuon retruenin laittaisin tuohon edeltävään ifiin, mutten saa toimimaan niin. ja sitten elseen toinen return, joka palauttaa person-tauöun\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hae kaveria \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        person: person\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"KvWRRk8QE74EVE/C23yOY+ASXCw=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Iida/React/FullStack/FullStack2022/Osa2/puhelinluettelo/src/components/Filter.js"],"names":["React","useState","Person","Filter","persons","filtPersons","haetut","setHaetut","handleFilter","e","hakusana","target","value","forEach","item","nimi","name","toLowerCase","includes","push","console","log","map","person","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA6B;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAACG,OAAD,CAAD,CAApC;;AAEA,WAASI,YAAT,CAAuBC,CAAvB,EAA0B;AACtB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;;AACI,QAAIF,QAAQ,IAAI,EAAhB,EAAoB;AAChB;AACAN,MAAAA,OAAO,CAACS,OAAR,CAAiBC,IAAD,IAAU;AACtB,YAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAX,CADsB,CAEtB;;AACA,YAAIF,IAAI,CAACG,QAAL,CAAcR,QAAQ,CAACO,WAAT,EAAd,CAAJ,EAA2C;AACvC;AACAX,UAAAA,MAAM,CAACa,IAAP,CAAYL,IAAZ;AACH;;AACDM,QAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACH,OARD;AASH,KAXD,MAYK;AACD,0BACI;AAAA,gDACiB;AAAO,UAAA,QAAQ,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADjB,eAEK;AAAA,oBACEJ,OAAO,CAACkB,GAAR,CAAYC,MAAM,iBACjB,QAAC,MAAD;AAAwB,YAAA,MAAM,EAAEA;AAAhC,aAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBADD;AADF;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACR,GA7BwC,CA+BzC;;;AAEH,sBACG;AAAA,4CACiB;AAAO,MAAA,QAAQ,EAAEhB;AAAjB;AAAA;AAAA;AAAA;AAAA,YADjB,eAEK;AAAA,gBACEJ,OAAO,CAACkB,GAAR,CAAYC,MAAM,iBACjB,QAAC,MAAD;AAAwB,QAAA,MAAM,EAAEA;AAAhC,SAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADF;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAUA,CA3CD;;GAAMrB,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["/* Iida Peltonen 2022 */\r\nimport React, {useState} from 'react'\r\nimport Person from './Person'\r\n\r\nconst Filter = ({ persons, filtPersons }) => {\r\n    const [haetut, setHaetut] = useState([persons])\r\n\r\n    function handleFilter (e) {\r\n        const hakusana = e.target.value\r\n            if (hakusana != \"\") {\r\n                //käydään taulukon nimet läpi ja verrataan\r\n                persons.forEach((item) => {\r\n                    let nimi = item.name.toLowerCase()\r\n                    //jos jo tallennettu nimi sisältään hakusanan\r\n                    if (nimi.includes(hakusana.toLowerCase())) {\r\n                        //nämä kaikki pitäisi sisällyttää tauluun, joka näytetään\r\n                        haetut.push(item)\r\n                    }\r\n                    console.log(haetut)\r\n                }) \r\n            }\r\n            else {\r\n                return (\r\n                    <div>\r\n                         Hae kaveria <input onChange={handleFilter} />\r\n                         <ul>\r\n                          {persons.map(person =>\r\n                            <Person key={person.id} person={person} />\r\n                          )}\r\n                        </ul>\r\n                   </div>\r\n                 )\r\n            }\r\n    }\r\n\r\n    //tuon retruenin laittaisin tuohon edeltävään ifiin, mutten saa toimimaan niin. ja sitten elseen toinen return, joka palauttaa person-tauöun\r\n     \r\n return (\r\n    <div>\r\n         Hae kaveria <input onChange={handleFilter} />\r\n         <ul>\r\n          {persons.map(person =>\r\n            <Person key={person.id} person={person} />\r\n          )}\r\n        </ul>\r\n   </div>\r\n )\r\n}\r\n\r\nexport default Filter"]},"metadata":{},"sourceType":"module"}