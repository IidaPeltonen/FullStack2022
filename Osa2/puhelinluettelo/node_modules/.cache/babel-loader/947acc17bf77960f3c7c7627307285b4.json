{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iida\\\\React\\\\FullStack\\\\FullStack2022\\\\Osa2\\\\puhelinluettelo\\\\src\\\\components\\\\UudenLisays.js\",\n    _s = $RefreshSig$();\n\n/* Iida Peltonen 2022 */\nimport { useState } from 'react';\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UudenLisays = _ref => {\n  _s();\n\n  let {\n    persons,\n    setPersons\n  } = _ref;\n  const [newPerson, setNewPerson] = useState(''); //nimet\n\n  const [newNumber, setNewNumber] = useState(''); //numerot\n  //uuden lisäys\n\n  const LisaaUusi = e => {\n    e.preventDefault();\n    const personObject = {\n      name: newPerson,\n      number: newNumber\n    };\n    let id;\n    let samaNimi = false; //käydään taulukon nimet läpi ja verrataan\n\n    persons.forEach((item, index) => {\n      //jos sama nimi löytyy\n      if (item.name.toLowerCase() === newPerson.toLowerCase()) {\n        samaNimi = true; // vaihdetaan \"uuden\" idksi vanhan id\n\n        id = item.id;\n      }\n    });\n\n    if (samaNimi) {\n      let vastaus = window.confirm(newPerson + ' löytyy jo luettelosta, päivitetäänkö numero?');\n\n      if (!vastaus) {\n        setNewPerson('');\n        setNewNumber('');\n      } else {\n        personService.update(id, personObject).then(returnedPerson => setPersons(personService.update(returnedPerson, personObject)));\n        setNewPerson('');\n        setNewNumber('');\n        alert(newPerson + 'n numero päivitetty');\n      }\n    } else {\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewPerson('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handlePersonChange = e => {\n    setNewPerson(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: LisaaUusi,\n    children: [\"Nimi: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newPerson,\n      onChange: handlePersonChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), \"Numero: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newNumber,\n      onChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Tallenna\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UudenLisays, \"Hm8zH83JUATIKQ8hf/KwUr23940=\");\n\n_c = UudenLisays;\nexport default UudenLisays;\n\nvar _c;\n\n$RefreshReg$(_c, \"UudenLisays\");","map":{"version":3,"sources":["C:/Users/Iida/React/FullStack/FullStack2022/Osa2/puhelinluettelo/src/components/UudenLisays.js"],"names":["useState","personService","UudenLisays","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","LisaaUusi","e","preventDefault","personObject","name","number","id","samaNimi","forEach","item","index","toLowerCase","vastaus","window","confirm","update","then","returnedPerson","alert","create","concat","handlePersonChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["/* Iida Peltonen 2022 */\r\n\r\nimport { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst UudenLisays = ({ persons, setPersons }) => {\r\n  const [newPerson, setNewPerson] = useState('') //nimet\r\n  const [newNumber, setNewNumber] = useState('') //numerot\r\n\r\n  //uuden lisäys\r\n  const LisaaUusi = e => {\r\n    e.preventDefault()\r\n    const personObject = {\r\n      name: newPerson,\r\n      number: newNumber,\r\n    }\r\n    let id\r\n    let samaNimi = false\r\n\r\n    //käydään taulukon nimet läpi ja verrataan\r\n    persons.forEach((item, index) => {\r\n      //jos sama nimi löytyy\r\n      if (item.name.toLowerCase() === newPerson.toLowerCase()) {\r\n        samaNimi = true\r\n        // vaihdetaan \"uuden\" idksi vanhan id\r\n        id = item.id\r\n      }\r\n    })\r\n      if (samaNimi) {\r\n        let vastaus = window.confirm(newPerson + ' löytyy jo luettelosta, päivitetäänkö numero?')\r\n        if (!vastaus) {\r\n          setNewPerson('')\r\n          setNewNumber('')\r\n        }\r\n        else {\r\n          personService.update(id, personObject)\r\n          .then((returnedPerson) =>\r\n          setPersons(personService.update(returnedPerson, personObject)))\r\n          setNewPerson('')\r\n          setNewNumber('')\r\n          alert(newPerson + 'n numero päivitetty')\r\n        }\r\n      }\r\n      else {\r\n        personService\r\n          .create(personObject)\r\n          .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewPerson('')\r\n          setNewNumber('')\r\n          })\r\n      }\r\n       \r\n\r\n  }\r\n  \r\n  const handlePersonChange = e => {\r\n    setNewPerson(e.target.value)\r\n  }\r\n\r\n  const handleNumberChange = e => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={LisaaUusi}>\r\n      Nimi: <input value={newPerson} onChange={handlePersonChange} />\r\n      <br />\r\n      Numero: <input value={newNumber} onChange={handleNumberChange} />\r\n      <br />\r\n      <button type='submit'>Tallenna</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UudenLisays\r\n"]},"metadata":{},"sourceType":"module"}