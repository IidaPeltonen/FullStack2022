{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iida\\\\React\\\\FullStack\\\\FullStack2022\\\\Osa2\\\\puhelinluettelo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* Iida Peltonen 2022 */\nimport { useState } from 'react';\nimport Person from './components/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [persons, setPersons] = useState(props.persons);\n  const [newPerson, setNewPerson] = useState('');\n  const [newNumber, setNewNumber] = useState(''); //uuden lisäys\n\n  const LisaaUusi = e => {\n    e.preventDefault();\n    const personObject = {\n      name: newPerson,\n      number: newNumber,\n      id: persons.length + 1\n    }; //käydän taulukon nimet läpi ja verrataan\n\n    persons.forEach((item, index) => {\n      if (item.name.toLowerCase() === newPerson.toLowerCase()) {\n        alert(\"Nimi löytyy jo luettelosta!\");\n        setNewPerson('');\n        setNewNumber(''); //miksi tässä silti tallentuu uusi?\n      } else {\n        setPersons(persons.concat(personObject));\n        setNewPerson('');\n        setNewNumber('');\n      }\n    });\n  };\n\n  const handlePersonChange = e => {\n    //console.log(e.target.value)\n    setNewPerson(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    //console.log(e.target.value)\n    setNewNumber(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Puhelinluettelo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        person: person\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tallenna uusi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: LisaaUusi,\n      children: [\"Nimi: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newPerson,\n        onChange: handlePersonChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \"Numero: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Tallenna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hiXHBjs+0hdVS/CqoJgKJ1f0T8Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Iida/React/FullStack/FullStack2022/Osa2/puhelinluettelo/src/App.js"],"names":["useState","Person","App","props","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","LisaaUusi","e","preventDefault","personObject","name","number","id","length","forEach","item","index","toLowerCase","alert","concat","handlePersonChange","target","value","handleNumberChange","map","person"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,KAAK,CAACC,OAAP,CAAtC;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAHmB,CAKnB;;AACA,QAAMU,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAER,SADa;AAEnBS,MAAAA,MAAM,EAAEP,SAFW;AAGnBQ,MAAAA,EAAE,EAAEZ,OAAO,CAACa,MAAR,GAAiB;AAHF,KAArB,CAFuB,CAQvB;;AACAb,IAAAA,OAAO,CAACc,OAAR,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,UAAID,IAAI,CAACL,IAAL,CAAUO,WAAV,OAA4Bf,SAAS,CAACe,WAAV,EAAhC,EAAyD;AACvDC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACAf,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ,CAHuD,CAIvD;AACD,OALD,MAMK;AACHJ,QAAAA,UAAU,CAACD,OAAO,CAACmB,MAAR,CAAeV,YAAf,CAAD,CAAV;AACAN,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,KAZD;AAaD,GAtBD;;AAwBA,QAAMe,kBAAkB,GAAGb,CAAC,IAAI;AAC9B;AACAJ,IAAAA,YAAY,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV,CAAZ;AACD,GAHD;;AAKA,QAAMC,kBAAkB,GAAGhB,CAAC,IAAI;AAC9B;AACAF,IAAAA,YAAY,CAACE,CAAC,CAACc,MAAF,CAASC,KAAV,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,gBACGtB,OAAO,CAACwB,GAAR,CAAYC,MAAM,iBACjB,QAAC,MAAD;AAAwB,QAAA,MAAM,EAAEA;AAAhC,SAAaA,MAAM,CAACb,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAM,MAAA,QAAQ,EAAEN,SAAhB;AAAA,wCACQ;AAAO,QAAA,KAAK,EAAEJ,SAAd;AAAyB,QAAA,QAAQ,EAAEkB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADR,2BAEU;AAAO,QAAA,KAAK,EAAEhB,SAAd;AAAyB,QAAA,QAAQ,EAAEmB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFV,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxDD;;GAAMzB,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["/* Iida Peltonen 2022 */\n\nimport { useState } from 'react'\nimport Person from './components/Person'\n\n\nconst App = props => {\n  const [persons, setPersons] = useState(props.persons) \n  const [newPerson, setNewPerson] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  //uuden lisäys\n  const LisaaUusi = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newPerson,\n      number: newNumber,\n      id: persons.length + 1,\n    }\n\n    //käydän taulukon nimet läpi ja verrataan\n    persons.forEach((item, index) => {\n      if (item.name.toLowerCase() === newPerson.toLowerCase()) {\n        alert(\"Nimi löytyy jo luettelosta!\")\n        setNewPerson('')\n        setNewNumber('')\n        //miksi tässä silti tallentuu uusi?\n      }\n      else {\n        setPersons(persons.concat(personObject))\n        setNewPerson('')\n        setNewNumber('')\n      }\n    })\n  }\n\n  const handlePersonChange = e => {\n    //console.log(e.target.value)\n    setNewPerson(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    //console.log(e.target.value)\n    setNewNumber(e.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n        <ul>\n          {persons.map(person =>\n            <Person key={person.id} person={person} />\n          )}\n        </ul>\n        <h2>Tallenna uusi</h2>\n        <form onSubmit={LisaaUusi}>\n          Nimi: <input value={newPerson} onChange={handlePersonChange} />\n          Numero: <input value={newNumber} onChange={handleNumberChange} />\n          <button type=\"submit\">Tallenna</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}